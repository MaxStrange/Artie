name: mouth-driver-unit-tests
labels:
  - docker-image
  - unit
dependencies:
  - driver-mouth: docker-image
  - artie-cli: docker-image
type: test
steps:
  - job: single-container-cli-suite
    docker-image-under-test:
      dependency:
        name: docker-image
        producing-task: driver-mouth
    cmd-to-run-in-dut: "python main.py /conf/mcu-fw.elf --port 18862 --loglevel info"
    dut-port-mappings:
      - 18862: 18862
    cli-image:
      dependency:
        name: docker-image
        producing-task: artie-cli
    steps:
      - test-name: init-mcu
        cmd-to-run-in-cli: "artie-cli help"
        expected-outputs:
          - what: "Mocking MCU FW load."
            where: ${DUT}
      - test-name: led-get
        cmd-to-run-in-cli: "artie-cli mouth led get --unit-test"
        expected-outputs:
          - what: "LED -> State: heartbeat"
            where: ${DUT}
      - test-name: led-on
        cmd-to-run-in-cli: "artie-cli mouth led on --unit-test"
        expected-outputs:
          - what: "LED -> ON"
            where: ${DUT}
      - test-name: led-off
        cmd-to-run-in-cli: "artie-cli mouth led off --unit-test"
        expected-outputs:
          - what: "LED -> OFF"
            where: ${DUT}
      - test-name: led-heartbeat
        cmd-to-run-in-cli: "artie-cli mouth led heartbeat --unit-test"
        expected-outputs:
          - what: "LED -> HEARTBEAT"
            where: ${DUT}
      - test-name: lcd-test
        cmd-to-run-in-cli: "artie-cli mouth lcd test --unit-test"
        expected-outputs:
          - what: "LCD -> TEST"
            where: ${DUT}
      - test-name: lcd-off
        cmd-to-run-in-cli: "artie-cli mouth lcd off --unit-test"
        expected-outputs:
          - what: "LCD -> OFF"
            where: ${DUT}
      - test-name: lcd-draw-talk
        cmd-to-run-in-cli: "artie-cli mouth lcd talk --unit-test"
        expected-outputs:
          - what: "LCD -> Talking mode"
            where: ${DUT}
      - test-name: lcd-draw-frown
        cmd-to-run-in-cli: "artie-cli mouth lcd draw frown --unit-test"
        expected-outputs:
          - what: "LCD -> Draw frown"
            where: ${DUT}
      - test-name: lcd-draw-line
        cmd-to-run-in-cli: "artie-cli mouth lcd draw line --unit-test"
        expected-outputs:
          - what: "LCD -> Draw line"
            where: ${DUT}
      - test-name: lcd-draw-smirk
        cmd-to-run-in-cli: "artie-cli mouth lcd draw smirk --unit-test"
        expected-outputs:
          - what: "LCD -> Draw smirk"
            where: ${DUT}
      - test-name: lcd-draw-open-smile
        cmd-to-run-in-cli: "artie-cli mouth lcd draw open-smile --unit-test"
        expected-outputs:
          - what: "LCD -> Draw open-smile"
            where: ${DUT}
      - test-name: lcd-draw-zig-zag
        cmd-to-run-in-cli: "artie-cli mouth lcd draw zig-zag --unit-test"
        expected-outputs:
          - what: "LCD -> Draw zig-zag"
            where: ${DUT}
      - test-name: lcd-draw-smile
        cmd-to-run-in-cli: "artie-cli mouth lcd draw smile --unit-test"
        expected-outputs:
          - what: "LCD -> Draw smile"
            where: ${DUT}
      - test-name: lcd-get
        cmd-to-run-in-cli: "artie-cli mouth lcd get --unit-test"
        expected-outputs:
          - what: "LCD -> smile"
            where: ${DUT}
      - test-name: fw-load
        cmd-to-run-in-cli: "artie-cli mouth fw load --unit-test"
        expected-outputs:
          - what: "Mocking MCU FW load."
            where: ${DUT}
      - test-name: self-check
        cmd-to-run-in-cli: "artie-cli mouth status self-check --unit-test"
        expected-outputs:
          - what: "Checking FW subsystem..."
            where: ${DUT}
          - what: "Checking LED subsystem..."
            where: ${DUT}
          - what: "Checking LCD subsystem..."
            where: ${DUT}
